name: Cypress E2E Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  cypress-run:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '24'
        cache: 'npm'

    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install Node.js dependencies
      run: npm ci

    - name: Run Django migrations
      run: |
        python manage.py migrate --noinput

    # - name: Collect static files
    #   run: |
    #     python manage.py collectstatic --noinput

    # - name: Build frontend assets
    #   run: |
    #     npm run build

    - name: Start Django server
      run: |
        python manage.py runserver 127.0.0.1:8000 &
        echo $! > django.pid
      env:
        DJANGO_SETTINGS_MODULE: formula1charts.settings

    - name: Start frontend development server
      run: |
        npm run start &
        echo $! > webpack.pid

    - name: Wait for servers to be ready
      run: |
        echo "Waiting for Django server..."
        timeout 60 bash -c 'until curl -f http://127.0.0.1:8000; do sleep 2; done'
        echo "Django server is ready!"
        
        echo "Waiting for webpack to compile..."
        sleep 30

    - name: Run Cypress tests
      uses: cypress-io/github-action@v6
      with:
        working-directory: ./
        wait-on: 'http://127.0.0.1:8000'
        wait-on-timeout: 120
        browser: chrome
        spec: cypress/e2e/test_pages.cy.js
      env:
        CYPRESS_baseUrl: http://127.0.0.1:8000

    - name: Cleanup processes
      if: always()
      run: |
        if [ -f django.pid ]; then
          kill $(cat django.pid) || true
          rm django.pid
        fi
        if [ -f webpack.pid ]; then
          kill $(cat webpack.pid) || true
          rm webpack.pid
        fi
        # Kill any remaining processes
        pkill -f "manage.py runserver" || true
        pkill -f "webpack" || true